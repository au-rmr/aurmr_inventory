type Query {
  getAllProducts: [AmazonProduct]

  getProduct(filter: String): [AmazonProduct!]!

  getAllAttributes: [Attribute]

  filterProdByAttr(attributes: [ID!]): [Attribute!]!

  getAllEvals: [Evaluation]

  getOneEval(evalName: String!): [Evaluation]

  getAmazonProductFromBinEval(evalName: String!, binName: String!, tableName: String!): [ProductBin]

  getAmazonProductFromBinIdEval(evalName: String!, binId: String!, tableName: String!): [ProductBin]

  getAllBins: [Bin]

  getBinByTable(tableName: String!): [Bin]

  getBinByBinNameTable(binName: String!, tableName: String!): Bin

  getBinByBinId(binId: String!): Bin
  
  getProductBinFromAmazonProductBinEval(binId: String!, asin: String!, evalName: String!): [ProductBin]

  getPicksFromProductBin(ProductBinId: Int!): [Pick]

  getAmazonProductFromEval(evalName: String!, asin: String!): [ProductBin]
}

type Mutation {
  addAmazonProduct(asin: String!, name: String!, size_length: Float, size_width: Float, size_height: Float, size_units: String, weight: Float, weight_units: String, attributes: [ID]): AmazonProduct!

  addAttribute(value: String!): Attribute!

  addAttributeToProduct(asin: String!, attribute: ID): AmazonProduct!

  deleteAttributeFromProduct(asin: String!, attribute: ID): AmazonProduct!

  updateSize(asin: String!, size_length: Float!, size_width: Float!, size_height: Float!, size_units: String!): AmazonProduct!

  updateWeight(asin: String!, weight: Float!, weight_units: String!): AmazonProduct!

  deleteProduct(asin: String!): AmazonProduct

  deleteAttribute(attribute: ID!): AmazonProduct

  addPick(ProductBinId: Int!, Outcome: Boolean, TimeTakenSec: Float): Pick!

  addPickWithOnlyProdBin(ProductBinId: Int!): Pick!

  addEval(name: String!): Evaluation!

  createBin(BinId: String!, BinName: String!, TableId: String!, TableName: String, depth: Float, width: Float, height: Float, units: String): Bin!

  addProdToBin(asin: String!, binId: String!, evalName: String!): ProductBin!

  deleteProdFromBin(id: ID!): ProductBin
}

type AmazonProduct {
  id: ID!
  asin: String!
  name: String!
  size_length: Float
  size_width: Float
  size_height: Float
  size_units: String
  weight: Float
  weight_units: String
  attributes: [AmazonProductAttribute]
  bins: [ProductBin]
}

type Attribute {
  id: ID!
  value: String!
  AmazonProducts: [AmazonProductAttribute]
}

type AmazonProductAttribute {
  AttributeId: ID!
  AmazonProductId: ID!
  attribute: Attribute
  amazonProduct: AmazonProduct
}

type Pick {
  id: ID!
  ProductBinId: ID!
  ProductFromBin: ProductBin
  Outcome: Boolean
  TimeTakenSec: Float
}

type Bin {
  id: ID!
  BinId: String! 
  BinName: String!
  TableId: String!
  TableName: String
  AmazonProducts: [ProductBin]
  depth: Float
  width: Float
  height: Float
  dimensions_units: String
}

type ProductBin {
  id: ID!
  AmazonProductId: ID!
  binId: String!
  evalId: ID!
  amazonProduct: AmazonProduct
  bin: Bin
  evaluation: Evaluation
  picks: [Pick]
}

type Evaluation {
  id: ID!
  name: String!
  Setup: [ProductBin]
}